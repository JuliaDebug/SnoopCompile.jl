julia_NamedTuple_105	Tuple{Type{NamedTuple{(:eltype, :ntrials, :parallel), T} where T<:Tuple}, Tuple{DataType, Int64, Bool}}
julia_peakflops_107	Tuple{typeof(InteractiveUtils.peakflops)}
julia_#peakflops#81_109	Tuple{InteractiveUtils.var"##peakflops#81", DataType, Int64, Bool, typeof(InteractiveUtils.peakflops), Int64}
julia_Signed_111	Tuple{Type{Signed}, UInt64}
julia_getproperty_113	Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.identity), typeof(Base.min)}, Symbol}
julia_reduce_empty_115	Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(Base.identity), typeof(Base.min)}, Type{Float64}}
julia_peakflops_117	Tuple{typeof(Core.kwcall), NamedTuple{(:eltype, :ntrials, :parallel), Tuple{DataType, Int64, Bool}}, typeof(LinearAlgebra.peakflops), Int64}
julia_#peakflops#253_120	Tuple{LinearAlgebra.var"##peakflops#253", DataType, Int64, Bool, typeof(LinearAlgebra.peakflops), Int64}
julia__mapreduce_123	Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}}
julia_mapreduce_impl_126	Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Float64, 1}, Int64, Int64}
julia_throw_boundserror_129	Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Int64}}
julia_ones_131	Tuple{typeof(Base.ones), Type{Float64}, Int64, Int64}
julia_in_133	Tuple{typeof(Base.in), Tuple{Char, Char, Char}}
julia_ntuple_135	Tuple{typeof(Base.ntuple), Base.Returns{Bool}, Base.Val{2}}
julia_CartesianIndex_137	Tuple{Type{Base.IteratorsMD.CartesianIndex{N} where N}, Tuple{Int64, Int64}}
julia__chkstride1_139	Tuple{typeof(LinearAlgebra._chkstride1), Bool}
julia_max_141	Tuple{typeof(Base.max), Vararg{Int64, 4}}
julia_sqrt_143	Tuple{typeof(Base.sqrt), Float64}
julia_convert_145	Tuple{typeof(Base.convert), Type{Float64}, Float64}
julia_getproperty_147	Tuple{typeof(Base.getproperty), Base.IteratorsMD.CartesianIndex{2}, Symbol}
julia_throw_uplo_149	Tuple{typeof(LinearAlgebra.throw_uplo)}
julia_char_uplo_151	Tuple{typeof(LinearAlgebra.char_uplo), Symbol}
julia_MulAddMul_153	Tuple{Type{LinearAlgebra.MulAddMul{ais1, bis0, TA, TB} where TB where TA where bis0 where ais1}, Bool, Bool}
julia_getproperty_155	Tuple{typeof(Base.getproperty), LinearAlgebra.MulAddMul{true, true, Bool, Bool}, Symbol}
julia_promote_157	Tuple{typeof(Base.promote), Bool, Bool, Float64}
julia_indexed_iterate_159	Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64, Float64}, Int64}
julia_indexed_iterate_161	Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64, Float64}, Int64, Int64}
julia_*_163	Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}}
julia__generic_matmatmul!_167	Tuple{typeof(LinearAlgebra._generic_matmatmul!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_throwdm_177	Tuple{typeof(Base.Broadcast.throwdm), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}
julia_copyto!_179	Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}
julia_copyto_unaliased!_183	Tuple{typeof(Base.copyto_unaliased!), Base.IndexLinear, Array{Float64, 2}, Base.IndexCartesian, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}
julia_throw_boundserror_186	Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Int64, Int64}}
julia_unalias_188	Tuple{typeof(Base.unalias), Array{Float64, 2}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}
julia_unaliascopy_191	Tuple{typeof(Base.unaliascopy), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}
julia_mightalias_194	Tuple{typeof(Base.mightalias), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}
julia_throw_boundserror_196	Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}, Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}}
julia_throw_boundserror_198	Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}
julia_copyto!_200	Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}
julia_copy_transpose!_203	Tuple{typeof(LinearAlgebra.copy_transpose!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}
julia_gemm_wrapper!_206	Tuple{typeof(LinearAlgebra.gemm_wrapper!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_gemm!_212	Tuple{typeof(LinearAlgebra.BLAS.gemm!), Char, Char, Float64, Array{Float64, 2}, Array{Float64, 2}, Float64, Array{Float64, 2}}
julia_matmul3x3!_214	Tuple{typeof(LinearAlgebra.matmul3x3!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_matmul2x2!_216	Tuple{typeof(LinearAlgebra.matmul2x2!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_getindex_218	Tuple{typeof(Base.getindex), Array{Float64, 2}, Int64, Int64}
