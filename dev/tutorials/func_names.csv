julia_NamedTuple_533	Tuple{Type{NamedTuple{(:eltype, :ntrials, :parallel), T} where T<:Tuple}, Tuple{DataType, Int64, Bool}}
julia_peakflops_536	Tuple{typeof(InteractiveUtils.peakflops)}
julia_#peakflops#81_546	Tuple{InteractiveUtils.var"##peakflops#81", DataType, Int64, Bool, typeof(InteractiveUtils.peakflops), Int64}
julia_Signed_558	Tuple{Type{Signed}, UInt64}
julia_getproperty_569	Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.identity), typeof(Base.min)}, Symbol}
julia_peakflops_579	Tuple{typeof(Core.kwcall), NamedTuple{(:eltype, :ntrials, :parallel), Tuple{DataType, Int64, Bool}}, typeof(LinearAlgebra.peakflops), Int64}
julia_#peakflops#349_584	Tuple{LinearAlgebra.var"##peakflops#349", DataType, Int64, Bool, typeof(LinearAlgebra.peakflops), Int64}
julia_mapreduce_impl_651	Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Float64, 1}, Int64, Int64}
julia_ones_657	Tuple{typeof(Base.ones), Type{Float64}, Int64, Int64}
julia_throw_boundserror_681	Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64}}
julia_*_684	Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}}
julia_gemm_wrapper!_700	Tuple{typeof(LinearAlgebra.gemm_wrapper!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_wrap_745	Tuple{typeof(LinearAlgebra.wrap), Array{Float64, 2}, Char}
julia_throw_uplo_781	Tuple{typeof(LinearAlgebra.throw_uplo)}
julia_gemm!_784	Tuple{typeof(LinearAlgebra.BLAS.gemm!), Char, Char, Float64, Array{Float64, 2}, Array{Float64, 2}, Float64, Array{Float64, 2}}
julia_matmul3x3!_806	Tuple{typeof(LinearAlgebra.matmul3x3!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_throw_boundserror_815	Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64, Int64}}
julia_matmul2x2!_821	Tuple{typeof(LinearAlgebra.matmul2x2!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Bool, Bool}}
julia_getindex_824	Tuple{typeof(Base.getindex), Array{Float64, 2}, Int64, Int64}
